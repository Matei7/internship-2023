/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/checkout.js":
/*!****************************!*\
  !*** ./src/js/checkout.js ***!
  \****************************/
/***/ (() => {

eval("let checkoutWindow = document.querySelector(\".checkout-window__grid\");\r\nlet totalText = document.querySelector(\".checkout-window-total\");\r\n\r\nlet productsArrayAfterUpdateAProduct = [];\r\n\r\nasync function updateTotalText() {\r\n    try {\r\n        const total = fetchCartsTotalPrice().then(total => {\r\n            totalText.textContent = `Total: ${total.toFixed(2)}`;\r\n        });\r\n    } catch (error) {\r\n        console.error('Error updating total text:', error);\r\n    }\r\n}\r\n\r\nfunction fetchCartsTotalPrice() {\r\n    return fetch('https://vlad-matei.thrive-dev.bitstoneint.com/wp-json/internship-api/v1/cart/64c3a491accd0', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`Request failed with status ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            const total = data.products.reduce((acc, product) => acc + product.total, 0);\r\n            return total;\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching cart products:', error);\r\n            return 0; // În caz de eroare, returnăm 0 pentru total\r\n        });\r\n}\r\nfunction fetchCart() {\r\n    return fetch('https://vlad-matei.thrive-dev.bitstoneint.com/wp-json/internship-api/v1/cart/64c3a491accd0', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`Request failed with status ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            return data.products;\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching cart products:', error);\r\n            return [];\r\n        });\r\n}\r\n\r\n\r\n\r\nfunction createItemBoxCheckout(product){\r\n    let boxItem = document.createElement(\"div\");\r\n    boxItem.classList.add(\"checkout-window__grid__box-item\");\r\n    boxItem.setAttribute(\"data-id\", product.id);\r\n    const price=(product.price - (product.price * product.discountPercentage) / 100).toFixed(2);\r\n    let hmtlPart= `\r\n        <img src=${product.thumbnail} alt=\"Product Image\" class=\"box-item__image\">\r\n        <p class=\"box-item__title\">${product.title}</p>\r\n        <p class=\"box-item__price\">${price}</p>\r\n        <div class=\"quantity buttons_added\">\r\n          <input type=\"button\" value=\"-\" class=\"minus\">\r\n          <input type=\"number\" step=\"1\" min=\"1\" max=\"\" value=${product.quantity}  class=\"input-text qty text\" size=\"4\" >\r\n          <input type=\"button\" value=\"+\" class=\"plus\">\r\n        </div>\r\n        <p class=\"box-item__total-price\"> ${(product.quantity * price).toFixed(2)}</p>\r\n      </div>`;\r\n    boxItem.innerHTML = hmtlPart;\r\n    return boxItem;\r\n}\r\n\r\nfunction plusMinusBtnListener(card){\r\n    const plusBtn = card.querySelector(\".plus\");\r\n    const minusBtn = card.querySelector(\".minus\");\r\n    const quantity = card.querySelector(\".input-text.qty.text\");\r\n    plusBtn.addEventListener(\"click\", () => {\r\n        quantity.value++;\r\n        increaseQuantityRequest(card);\r\n        updateQuantityProducts(card);\r\n\r\n    });\r\n    minusBtn.addEventListener(\"click\", () => {\r\n        if(quantity.value>1){\r\n            quantity.value--;\r\n            decreaseQuantityRequest(card);\r\n            updateQuantityProducts(card);\r\n        }\r\n    });\r\n}\r\n\r\nfunction increaseQuantityRequest(cardElement) {\r\n    const productId = Number(cardElement.dataset.id);\r\n    fetch('https://vlad-matei.thrive-dev.bitstoneint.com/wp-json/internship-api/v1/cart/64c3a491accd0', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            products: [\r\n                {\r\n                    id: productId,\r\n                    quantity: 1,\r\n                }\r\n            ]\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(console.log);\r\n\r\n}\r\n\r\nfunction decreaseQuantityRequest(cardElement) {\r\n\r\n    const productId = Number(cardElement.dataset.id);\r\n    fetch('https://vlad-matei.thrive-dev.bitstoneint.com/wp-json/internship-api/v1/cart/64c3a491accd0', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            products: [\r\n                {\r\n                    id: productId,\r\n                    quantity: -1,\r\n                }\r\n            ]\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(console.log);\r\n}\r\n\r\nfunction updateQuantityProducts(){\r\n    fetchCart()\r\n        .then(productsFromCart => {\r\n            for (const product of productsFromCart) {\r\n                console.log(product);\r\n                const itemBox = document.querySelector(`.checkout-window__grid__box-item[data-id=\"${product.id}\"]`);\r\n                const itemQuantity = itemBox.querySelector(\".input-text.qty.text\");\r\n                const itemTotalPrice = itemBox.querySelector(\".box-item__total-price\");\r\n                itemQuantity.textContent = product.quantity;\r\n                const price=product.price - (product.price * product.discountPercentage) / 100;\r\n                itemTotalPrice.textContent = `${(product.quantity * price).toFixed(2)}`;\r\n                updateTotalText();\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error show cart items:', error);\r\n        });\r\n}\r\n\r\n\r\nfunction showCheckoutProducts(){\r\n    fetchCart()\r\n        .then(productsFromCart => {\r\n            for (const product of productsFromCart) {\r\n                console.log(product);\r\n                let card=createItemBoxCheckout(product);\r\n                checkoutWindow.appendChild(card);\r\n                plusMinusBtnListener(card);\r\n                updateTotalText();\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error show cart items:', error);\r\n        });\r\n}\r\n\r\nconst buyButton=document.querySelector(\".checkout-window__button\");\r\nbuyButton.addEventListener(\"click\", ()=>{\r\n    window.location.href = \"index.html\";\r\n});\r\n\r\nshowCheckoutProducts();\n\n//# sourceURL=webpack://internship-2023/./src/js/checkout.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/checkout.js"]();
/******/ 	
/******/ })()
;